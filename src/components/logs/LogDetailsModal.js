import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { formatDateTime } from '../../utils/dateUtils';
import PortalModal from '../common/PortalModal';
import { useEffect } from 'react';
export default function LogDetailsModal({ log, onClose }) {
    // Usar useEffect para añadir/quitar la clase modal-open al body
    useEffect(() => {
        if (!log)
            return;
        // Añadir la clase al montar
        document.body.classList.add('modal-open');
        // Agregar un backdrop fuera del componente
        const backdropElement = document.createElement('div');
        backdropElement.className = 'modal-backdrop fade show';
        document.body.appendChild(backdropElement);
        // Limpiar al desmontar
        return () => {
            document.body.classList.remove('modal-open');
            document.body.removeChild(backdropElement);
        };
    }, [log]);
    if (!log)
        return null;
    // Función para formatear moneda
    const formatCurrency = (amount) => {
        return new Intl.NumberFormat('es-CL', {
            style: 'currency',
            currency: 'CLP',
            minimumFractionDigits: 0
        }).format(amount);
    };
    // Mostrar el nombre de operación de forma legible
    const operationLabel = {
        'create': 'Creación',
        'update': 'Actualización',
        'delete': 'Eliminación'
    }[log.operation] || log.operation;
    // Mostrar el nombre de colección de forma legible
    const collectionLabel = {
        'product': 'Productos',
        'consumable': 'Insumos',
        'contact': 'Contactos',
        'quotation': 'Cotizaciones',
        'sale': 'Ventas',
        'purchase': 'Compras'
    }[log.collectionType] || log.collectionType;
    // Función para renderizar detalles de transacciones
    const renderTransactionDetails = (details) => {
        return (_jsxs(_Fragment, { children: [details.documentNumber && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-primary text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCC4 Informaci\u00F3n del Documento" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "N\u00FAmero:" }), " ", details.documentNumber] }), details.documentType && _jsxs("p", { children: [_jsx("strong", { children: "Tipo:" }), " ", details.documentType === 'factura' ? 'Factura' : 'Boleta'] }), details.status && _jsxs("p", { children: [_jsx("strong", { children: "Estado:" }), " ", _jsx("span", { className: "badge bg-secondary", children: details.status })] })] }), _jsxs("div", { className: "col-md-6", children: [details.validUntil && _jsxs("p", { children: [_jsx("strong", { children: "V\u00E1lido hasta:" }), " ", new Date(details.validUntil).toLocaleDateString('es-CL')] }), details.itemsCount && _jsxs("p", { children: [_jsx("strong", { children: "Cantidad de items:" }), " ", details.itemsCount] }), details.isFromQuotation && _jsxs("p", { children: [_jsx("strong", { children: "Origen:" }), " ", _jsx("span", { className: "badge bg-info", children: "Desde cotizaci\u00F3n" })] })] })] }) })] })), details.counterparty && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-success text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83C\uDFE2 Contraparte" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.counterparty.name] }), _jsxs("p", { children: [_jsx("strong", { children: "RUT:" }), " ", details.counterparty.rut] })] }), _jsxs("div", { className: "col-md-6", children: [details.counterparty.email && _jsxs("p", { children: [_jsx("strong", { children: "Email:" }), " ", details.counterparty.email] }), _jsxs("p", { children: [_jsx("strong", { children: "Roles:" }), details.counterparty.isCustomer && _jsx("span", { className: "badge bg-primary me-1", children: "Cliente" }), details.counterparty.isSupplier && _jsx("span", { className: "badge bg-warning", children: "Proveedor" })] })] })] }) })] })), (details.totalAmount || details.netAmount || details.taxAmount) && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-warning text-dark", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCB0 Informaci\u00F3n Financiera" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [details.netAmount && (_jsx("div", { className: "col-md-4", children: _jsxs("p", { children: [_jsx("strong", { children: "Neto:" }), " ", formatCurrency(details.netAmount)] }) })), details.taxAmount && (_jsx("div", { className: "col-md-4", children: _jsxs("p", { children: [_jsx("strong", { children: "IVA:" }), " ", formatCurrency(details.taxAmount)] }) })), details.totalAmount && (_jsx("div", { className: "col-md-4", children: _jsxs("p", { children: [_jsx("strong", { children: "Total:" }), " ", _jsx("span", { className: "fw-bold text-success", children: formatCurrency(details.totalAmount) })] }) }))] }) })] })), details.operationType === 'STATUS_CHANGE' && details.statusTransition && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-info text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDD04 Cambio de Estado" }) }), _jsxs("div", { className: "card-body", children: [_jsxs("div", { className: "d-flex align-items-center justify-content-center", children: [_jsx("span", { className: "badge bg-danger me-2", children: details.statusTransition.from }), _jsx("i", { className: "bi bi-arrow-right mx-2" }), _jsx("span", { className: "badge bg-success ms-2", children: details.statusTransition.to })] }), details.transactionInfo && (_jsx("div", { className: "mt-3", children: _jsxs("small", { className: "text-muted", children: ["Informaci\u00F3n adicional: Total ", formatCurrency(details.transactionInfo.totalAmount), ",", details.transactionInfo.itemsCount, " items"] }) }))] })] })), details.operationType === 'QUOTATION_CONVERSION' && details.convertedFrom && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-info text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDD04 Conversi\u00F3n desde Cotizaci\u00F3n" }) }), _jsxs("div", { className: "card-body", children: [_jsxs("p", { children: [_jsx("strong", { children: "Cotizaci\u00F3n origen:" }), " ", details.convertedFrom.documentNumber] }), _jsxs("p", { children: [_jsx("strong", { children: "Estado original:" }), " ", _jsx("span", { className: "badge bg-secondary", children: details.convertedFrom.originalStatus })] }), details.conversionData && (_jsxs("div", { children: [_jsx("p", { children: _jsx("strong", { children: "Datos convertidos:" }) }), _jsxs("ul", { className: "list-unstyled", children: [_jsxs("li", { children: ["\u2022 Total: ", formatCurrency(details.conversionData.totalAmount)] }), _jsxs("li", { children: ["\u2022 Items: ", details.conversionData.itemsCount] }), _jsxs("li", { children: ["\u2022 Tipo: ", details.conversionData.documentType] })] })] }))] })] })), details.changes && Object.keys(details.changes).length > 0 && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-warning text-dark", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCDD Cambios Realizados" }) }), _jsx("div", { className: "card-body", children: _jsx("div", { className: "table-responsive", children: _jsxs("table", { className: "table table-sm", children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { children: "Campo" }), _jsx("th", { children: "Valor Anterior" }), _jsx("th", { children: "Nuevo Valor" })] }) }), _jsx("tbody", { children: Object.entries(details.changes).map(([field, change]) => (_jsxs("tr", { children: [_jsx("td", { className: "fw-bold", children: field }), _jsx("td", { className: "text-danger", children: String(change.from) || '-' }), _jsx("td", { className: "text-success", children: String(change.to) || '-' })] }, field))) })] }) }) })] })), details.observations && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-light", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCAC Observaciones" }) }), _jsx("div", { className: "card-body", children: _jsx("p", { className: "mb-0", children: details.observations }) })] }))] }));
    };
    // Función para renderizar detalles de contactos
    const renderContactDetails = (details) => {
        return (_jsxs(_Fragment, { children: [_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-primary text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDC64 Informaci\u00F3n del Contacto" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [details.contactName && _jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.contactName] }), details.contactRut && _jsxs("p", { children: [_jsx("strong", { children: "RUT:" }), " ", details.contactRut] }), details.operationType && (_jsxs("p", { children: [_jsx("strong", { children: "Tipo de operaci\u00F3n:" }), _jsx("span", { className: "badge bg-info ms-1", children: details.operationType.replace('_', ' ') })] }))] }), _jsxs("div", { className: "col-md-6", children: [details.sourceController && _jsxs("p", { children: [_jsx("strong", { children: "Controlador:" }), " ", details.sourceController] }), details.wasReactivated && _jsx("p", { children: _jsx("span", { className: "badge bg-success", children: "Contacto Reactivado" }) })] })] }) })] }), details.contactInfo && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-success text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCCB Datos del Contacto" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.contactInfo.name] }), _jsxs("p", { children: [_jsx("strong", { children: "RUT:" }), " ", details.contactInfo.rut] }), details.contactInfo.email && _jsxs("p", { children: [_jsx("strong", { children: "Email:" }), " ", details.contactInfo.email] })] }), _jsxs("div", { className: "col-md-6", children: [details.contactInfo.phone && _jsxs("p", { children: [_jsx("strong", { children: "Tel\u00E9fono:" }), " ", details.contactInfo.phone] }), details.contactInfo.address && _jsxs("p", { children: [_jsx("strong", { children: "Direcci\u00F3n:" }), " ", details.contactInfo.address] }), _jsxs("p", { children: [_jsx("strong", { children: "Roles:" }), details.contactInfo.roles.isCustomer && _jsx("span", { className: "badge bg-primary me-1", children: "Cliente" }), details.contactInfo.roles.isSupplier && _jsx("span", { className: "badge bg-warning", children: "Proveedor" })] })] })] }) })] })), details.changes && Object.keys(details.changes).length > 0 && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-warning text-dark", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCDD Cambios Realizados" }) }), _jsx("div", { className: "card-body", children: _jsx("div", { className: "table-responsive", children: _jsxs("table", { className: "table table-sm", children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { children: "Campo" }), _jsx("th", { children: "Valor Anterior" }), _jsx("th", { children: "Nuevo Valor" })] }) }), _jsx("tbody", { children: Object.entries(details.changes).map(([field, change]) => (_jsxs("tr", { children: [_jsx("td", { className: "fw-bold", children: field }), _jsx("td", { className: "text-danger", children: String(change.from) || '-' }), _jsx("td", { className: "text-success", children: String(change.to) || '-' })] }, field))) })] }) }) })] })), details.deletedData && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-danger text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDDD1\uFE0F Datos Eliminados" }) }), _jsxs("div", { className: "card-body", children: [_jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.deletedData.name] }), _jsxs("p", { children: [_jsx("strong", { children: "RUT:" }), " ", details.deletedData.rut] }), details.deletedData.email && _jsxs("p", { children: [_jsx("strong", { children: "Email:" }), " ", details.deletedData.email] })] }), _jsxs("div", { className: "col-md-6", children: [details.deletedData.phone && _jsxs("p", { children: [_jsx("strong", { children: "Tel\u00E9fono:" }), " ", details.deletedData.phone] }), details.deletedData.address && _jsxs("p", { children: [_jsx("strong", { children: "Direcci\u00F3n:" }), " ", details.deletedData.address] }), _jsxs("p", { children: [_jsx("strong", { children: "Fecha creaci\u00F3n original:" }), " ", new Date(details.deletedData.originalCreationDate).toLocaleDateString('es-CL')] })] })] }), details.deletionReason && (_jsx("div", { className: "mt-2", children: _jsxs("p", { children: [_jsx("strong", { children: "Raz\u00F3n:" }), " ", details.deletionReason] }) }))] })] }))] }));
    };
    // Función para renderizar detalles de items
    const renderItemDetails = (details) => {
        return (_jsxs(_Fragment, { children: [_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-primary text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCE6 Informaci\u00F3n del Item" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [details.itemName && _jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.itemName] }), details.itemType && _jsxs("p", { children: [_jsx("strong", { children: "Tipo:" }), " ", _jsx("span", { className: "badge bg-info", children: details.itemType === 'Product' ? 'Producto' : 'Insumo' })] }), details.operationType && _jsxs("p", { children: [_jsx("strong", { children: "Operaci\u00F3n:" }), " ", details.operationType.replace('_', ' ')] })] }), _jsxs("div", { className: "col-md-6", children: [details.sourceController && _jsxs("p", { children: [_jsx("strong", { children: "Controlador:" }), " ", details.sourceController] }), details.initialStock !== undefined && _jsxs("p", { children: [_jsx("strong", { children: "Stock inicial:" }), " ", details.initialStock] })] })] }) })] }), details.itemInfo && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-success text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCCB Datos del Item" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.itemInfo.name] }), _jsxs("p", { children: [_jsx("strong", { children: "Descripci\u00F3n:" }), " ", details.itemInfo.description] }), details.itemInfo.dimensions && _jsxs("p", { children: [_jsx("strong", { children: "Dimensiones:" }), " ", details.itemInfo.dimensions] })] }), _jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Precio Neto:" }), " ", formatCurrency(details.itemInfo.netPrice)] }), details.itemInfo.stock !== undefined && _jsxs("p", { children: [_jsx("strong", { children: "Stock:" }), " ", details.itemInfo.stock] }), _jsxs("p", { children: [_jsx("strong", { children: "Inventariado:" }), _jsx("span", { className: `badge ${details.itemInfo.isInventoried ? 'bg-success' : 'bg-secondary'} ms-1`, children: details.itemInfo.isInventoried ? 'Sí' : 'No' })] })] })] }) })] })), details.priceImpact && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-warning text-dark", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCB0 Impacto de Precios" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Precio anterior:" }), " ", formatCurrency(details.priceImpact.oldPrice)] }), _jsxs("p", { children: [_jsx("strong", { children: "Precio nuevo:" }), " ", formatCurrency(details.priceImpact.newPrice)] })] }), _jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Diferencia:" }), _jsxs("span", { className: `fw-bold ${details.priceImpact.difference > 0 ? 'text-success' : 'text-danger'}`, children: [details.priceImpact.difference > 0 ? '+' : '', formatCurrency(details.priceImpact.difference)] })] }), _jsxs("p", { children: [_jsx("strong", { children: "Cambio porcentual:" }), _jsx("span", { className: `badge ${details.priceImpact.difference > 0 ? 'bg-success' : 'bg-danger'} ms-1`, children: details.priceImpact.percentageChange })] })] })] }) })] })), details.stockImpact && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-info text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCCA Impacto de Stock" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Stock anterior:" }), " ", details.stockImpact.oldStock] }), _jsxs("p", { children: [_jsx("strong", { children: "Stock nuevo:" }), " ", details.stockImpact.newStock] })] }), _jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Diferencia:" }), _jsxs("span", { className: `fw-bold ${details.stockImpact.difference > 0 ? 'text-success' : 'text-danger'}`, children: [details.stockImpact.difference > 0 ? '+' : '', details.stockImpact.difference] })] }), (details.stockImpact.becameInventoried || details.stockImpact.becameNonInventoried) && (_jsxs("p", { children: [_jsx("strong", { children: "Cambio de estado:" }), details.stockImpact.becameInventoried && _jsx("span", { className: "badge bg-success ms-1", children: "Ahora inventariado" }), details.stockImpact.becameNonInventoried && _jsx("span", { className: "badge bg-warning ms-1", children: "Ya no inventariado" })] }))] })] }) })] })), details.financialImpact && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-danger text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCB8 Impacto Financiero de Eliminaci\u00F3n" }) }), _jsxs("div", { className: "card-body", children: [_jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Valor unitario:" }), " ", formatCurrency(details.financialImpact.itemValue)] }), _jsxs("p", { children: [_jsx("strong", { children: "Valor stock perdido:" }), _jsx("span", { className: "fw-bold text-danger", children: formatCurrency(details.financialImpact.stockValue) })] })] }), _jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Ten\u00EDa stock:" }), _jsx("span", { className: `badge ${details.financialImpact.hadStock ? 'bg-warning' : 'bg-success'} ms-1`, children: details.financialImpact.hadStock ? 'Sí' : 'No' })] }), _jsxs("p", { children: [_jsx("strong", { children: "Era inventariado:" }), _jsx("span", { className: `badge ${details.financialImpact.wasInventoried ? 'bg-warning' : 'bg-secondary'} ms-1`, children: details.financialImpact.wasInventoried ? 'Sí' : 'No' })] })] })] }), details.deletionReason && (_jsx("div", { className: "mt-2", children: _jsxs("p", { children: [_jsx("strong", { children: "Raz\u00F3n de eliminaci\u00F3n:" }), " ", details.deletionReason] }) }))] })] })), details.deletedData && (_jsxs("div", { className: "card mb-3", children: [_jsx("div", { className: "card-header bg-danger text-white", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDDD1\uFE0F Datos Eliminados" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Nombre:" }), " ", details.deletedData.name] }), _jsxs("p", { children: [_jsx("strong", { children: "Descripci\u00F3n:" }), " ", details.deletedData.description] }), _jsxs("p", { children: [_jsx("strong", { children: "Precio:" }), " ", formatCurrency(details.deletedData.netPrice)] })] }), _jsxs("div", { className: "col-md-6", children: [details.deletedData.dimensions && _jsxs("p", { children: [_jsx("strong", { children: "Dimensiones:" }), " ", details.deletedData.dimensions] }), details.deletedData.stock !== undefined && _jsxs("p", { children: [_jsx("strong", { children: "Stock final:" }), " ", details.deletedData.stock] }), _jsxs("p", { children: [_jsx("strong", { children: "Fecha creaci\u00F3n:" }), " ", new Date(details.deletedData.originalCreationDate).toLocaleDateString('es-CL')] })] })] }) })] }))] }));
    };
    // Función principal para renderizar detalles según el tipo
    const renderEnrichedDetails = () => {
        const details = log.details;
        // Verificar el tipo de log y renderizar accordingly
        if (log.collectionType === 'quotation' || log.collectionType === 'sale' || log.collectionType === 'purchase') {
            return renderTransactionDetails(details);
        }
        if (log.collectionType === 'contact') {
            return renderContactDetails(details);
        }
        if (log.collectionType === 'product' || log.collectionType === 'consumable') {
            return renderItemDetails(details);
        }
        // Fallback para logs sin información enriquecida
        return (_jsxs("div", { className: "card", children: [_jsx("div", { className: "card-header bg-light", children: _jsx("h6", { className: "mb-0", children: "\uD83D\uDCC4 Detalles Raw" }) }), _jsx("div", { className: "card-body", children: _jsx("pre", { className: "bg-light p-3 rounded", style: { fontSize: '0.85rem', maxHeight: '300px', overflow: 'auto' }, children: JSON.stringify(details, null, 2) }) })] }));
    };
    return (_jsxs(PortalModal, { isOpen: true, onClose: onClose, children: [_jsx("div", { className: "modal-backdrop fade show", style: { zIndex: 1050 }, onClick: onClose }), _jsx("div", { className: "modal fade show", style: {
                    display: 'block',
                    zIndex: 1055
                }, tabIndex: -1, children: _jsx("div", { className: "modal-dialog modal-xl modal-dialog-scrollable", children: _jsxs("div", { className: "modal-content", children: [_jsxs("div", { className: "modal-header", children: [_jsxs("h5", { className: "modal-title", children: [_jsx("i", { className: "bi bi-file-text-fill me-2" }), "Detalles del Registro de Actividad"] }), _jsx("button", { type: "button", className: "btn-close", onClick: onClose, "aria-label": "Cerrar" })] }), _jsxs("div", { className: "modal-body", children: [_jsxs("div", { className: "card mb-4", children: [_jsx("div", { className: "card-header bg-dark text-white", children: _jsx("h6", { className: "mb-0", children: "\u2139\uFE0F Informaci\u00F3n General" }) }), _jsx("div", { className: "card-body", children: _jsxs("div", { className: "row", children: [_jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "Fecha y hora:" }), " ", formatDateTime(log.createdAt)] }), _jsxs("p", { children: [_jsx("strong", { children: "Operaci\u00F3n:" }), _jsx("span", { className: `badge ms-1 ${log.operation === 'create' ? 'bg-success' :
                                                                                log.operation === 'update' ? 'bg-primary' :
                                                                                    log.operation === 'delete' ? 'bg-danger' : 'bg-secondary'}`, children: operationLabel })] }), _jsxs("p", { children: [_jsx("strong", { children: "Colecci\u00F3n:" }), " ", _jsx("span", { className: "badge bg-light text-dark border", children: collectionLabel })] })] }), _jsxs("div", { className: "col-md-6", children: [_jsxs("p", { children: [_jsx("strong", { children: "ID del documento:" }), " ", _jsx("code", { children: log.documentId })] }), _jsx("p", { children: _jsx("strong", { children: "Usuario:" }) }), typeof log.userId === 'object' && log.userId ? (_jsxs("div", { className: "ms-3", children: [_jsx("p", { className: "mb-0 fw-bold", children: log.userId.name }), _jsx("p", { className: "mb-0 text-muted small", children: log.userId.email }), _jsxs("p", { className: "mb-0 text-muted small", children: ["ID: ", log.userId._id] })] })) : (_jsx("div", { className: "ms-3", children: _jsxs("p", { className: "mb-0", children: ["ID: ", log.userId] }) }))] })] }) })] }), renderEnrichedDetails()] }), _jsx("div", { className: "modal-footer", children: _jsx("button", { type: "button", className: "btn btn-secondary", onClick: onClose, children: "Cerrar" }) })] }) }) })] }));
}
